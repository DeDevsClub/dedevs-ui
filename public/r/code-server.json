{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "code-server",
  "type": "registry:ui",
  "description": "Code server component",
  "files": [
    {
      "path": "packages/code/server.tsx",
      "content": "import {\n  transformerNotationDiff,\n  transformerNotationErrorLevel,\n  transformerNotationFocus,\n  transformerNotationHighlight,\n  transformerNotationWordHighlight,\n} from '@shikijs/transformers';\nimport type { HTMLAttributes } from 'react';\nimport {\n  type BundledLanguage,\n  type CodeOptionsMultipleThemes,\n  codeToHtml,\n} from 'shiki';\n\nexport type CodeBlockContentProps = HTMLAttributes<HTMLDivElement> & {\n  themes?: CodeOptionsMultipleThemes['themes'];\n  language?: BundledLanguage;\n  children: string;\n  syntaxHighlighting?: boolean;\n};\n\nexport const CodeBlockContent = async ({\n  children,\n  themes,\n  language,\n  syntaxHighlighting = true,\n  ...props\n}: CodeBlockContentProps) => {\n  const html = syntaxHighlighting\n    ? await codeToHtml(children as string, {\n        lang: language ?? 'typescript',\n        themes: themes ?? {\n          light: 'vitesse-light',\n          dark: 'vitesse-dark',\n        },\n        transformers: [\n          transformerNotationDiff({\n            matchAlgorithm: 'v3',\n          }),\n          transformerNotationHighlight({\n            matchAlgorithm: 'v3',\n          }),\n          transformerNotationWordHighlight({\n            matchAlgorithm: 'v3',\n          }),\n          transformerNotationFocus({\n            matchAlgorithm: 'v3',\n          }),\n          transformerNotationErrorLevel({\n            matchAlgorithm: 'v3',\n          }),\n        ],\n      })\n    : children;\n\n  return (\n    <div\n      // biome-ignore lint/security/noDangerouslySetInnerHtml: \"Kinda how Shiki works\"\n      dangerouslySetInnerHTML={{ __html: html }}\n      {...props}\n    />\n  );\n};\n",
      "type": "registry:component"
    }
  ]
}