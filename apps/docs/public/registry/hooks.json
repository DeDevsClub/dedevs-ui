{
  "$schema": "https://ui.shadcn.com/schema/registry.json",
  "homepage": "https://ui.dedevs.club/hooks",
  "name": "hooks",
  "type": "registry:ui",
  "author": "DeDevsClub <admin@dedevs.club>",
  "registryDependencies": [],
  "dependencies": [],
  "devDependencies": [],
  "files": [
    {
      "type": "registry:ui",
      "path": "index.tsx",
      "content": "export * as useDialogState from './use-dialog-state';\nexport * as useIsMobile from './use-mobile';\nexport * as useToast from './use-toast';\n",
      "target": "components/ui/dedevs-ui/hooks/index.tsx"
    },
    {
      "type": "registry:ui",
      "path": "use-mobile.tsx",
      "content": "import * as React from 'react'\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener('change', onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener('change', onChange)\n  }, [])\n\n  return !!isMobile\n}\n",
      "target": "components/ui/dedevs-ui/hooks/use-mobile.tsx"
    },
    {
      "type": "registry:ui",
      "path": "use-dialog-state.tsx",
      "content": "import { useState } from 'react'\n\n/**\n * Custom hook for confirm dialog\n * @param initialState string | null\n * @returns A stateful value, and a function to update it.\n * @example const [open, setOpen] = useDialogState<\"approve\" | \"reject\">()\n */\nexport default function useDialogState<T extends string | boolean>(\n  initialState: T | null = null\n) {\n  const [open, _setOpen] = useState<T | null>(initialState)\n\n  const setOpen = (str: T | null) =>\n    _setOpen((prev) => (prev === str ? null : str))\n\n  return [open, setOpen] as const\n}\n",
      "target": "components/ui/dedevs-ui/hooks/use-dialog-state.tsx"
    }
  ]
}