{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "site-cta",
  "type": "registry:ui",
  "description": "Call-to-action component with multiple variants",
  "files": [
    {
      "path": "packages/site/cta.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { ArrowRight, Sparkles, Star } from \"lucide-react\";\nimport { Button } from \"@repo/shadcn-ui/components/ui/button\";\nimport { cn } from \"@repo/shadcn-ui/lib/utils\";\n\nexport interface CTAAction {\n  label: string;\n  href?: string;\n  onClick?: () => void;\n}\n\nexport interface CTATestimonial {\n  text: string;\n  author: string;\n  role: string;\n  avatar?: string;\n}\n\nexport interface CTAProps {\n  title: string;\n  description: string;\n  primaryAction: CTAAction;\n  secondaryAction?: CTAAction;\n  features?: string[];\n  testimonial?: CTATestimonial;\n  variant?: \"default\" | \"gradient\" | \"minimal\" | \"card\";\n  backgroundImage?: string;\n  className?: string;\n}\n\nconst fadeInUp = {\n  hidden: { opacity: 0, y: 20 },\n  visible: { opacity: 1, y: 0, transition: { duration: 0.6 } },\n};\n\nconst staggerContainer = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.2,\n      delayChildren: 0.1,\n    },\n  },\n};\n\nexport function CTA({\n  title,\n  description,\n  primaryAction,\n  secondaryAction,\n  features,\n  testimonial,\n  variant = \"default\",\n  backgroundImage,\n  className,\n}: CTAProps) {\n  const getVariantClasses = () => {\n    switch (variant) {\n      case \"gradient\":\n        return \"bg-gradient-to-br from-blue-600 via-purple-600 to-pink-600 text-white\";\n      case \"minimal\":\n        return \"bg-white dark:bg-neutral-950 border-t border-neutral-200 dark:border-neutral-800\";\n      case \"card\":\n        return \"bg-neutral-50 dark:bg-neutral-900\";\n      default:\n        return \"bg-neutral-900 dark:bg-neutral-950 text-white\";\n    }\n  };\n\n  const getTextClasses = () => {\n    if (variant === \"gradient\" || variant === \"default\") {\n      return {\n        title: \"text-white\",\n        description: \"text-white/90\",\n        feature: \"text-white/80\",\n      };\n    }\n    return {\n      title: \"text-neutral-900 dark:text-neutral-100\",\n      description: \"text-neutral-600 dark:text-neutral-400\",\n      feature: \"text-neutral-500 dark:text-neutral-400\",\n    };\n  };\n\n  const textClasses = getTextClasses();\n\n  return (\n    <section\n      className={cn(\n        \"relative py-24 sm:py-32 overflow-hidden\",\n        getVariantClasses(),\n        className\n      )}\n    >\n      {/* Background Image */}\n      {backgroundImage && (\n        <div\n          className=\"absolute inset-0 bg-cover bg-center bg-no-repeat opacity-20\"\n          style={{ backgroundImage: `url(${backgroundImage})` }}\n        />\n      )}\n\n      {/* Background Pattern */}\n      {variant !== \"minimal\" && (\n        <div className=\"absolute inset-0 bg-grid-white/10 dark:bg-grid-white/5\" />\n      )}\n\n      {/* Floating Elements */}\n      {variant === \"gradient\" && (\n        <>\n          <div className=\"absolute top-20 left-10 w-20 h-20 bg-white/10 rounded-full blur-xl animate-pulse\" />\n          <div className=\"absolute bottom-20 right-10 w-16 h-16 bg-white/10 rounded-full blur-xl animate-pulse delay-1000\" />\n          <div className=\"absolute top-1/2 right-20 w-12 h-12 bg-white/10 rounded-full blur-xl animate-pulse delay-2000\" />\n        </>\n      )}\n\n      <div className=\"relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {variant === \"card\" ? (\n          <motion.div\n            initial=\"hidden\"\n            whileInView=\"visible\"\n            viewport={{ once: true }}\n            variants={staggerContainer}\n            className=\"max-w-4xl mx-auto\"\n          >\n            <div className=\"bg-white dark:bg-neutral-800 rounded-2xl p-8 sm:p-12 shadow-xl border border-neutral-200 dark:border-neutral-700\">\n              <div className=\"text-center space-y-8\">\n                <motion.div variants={fadeInUp} className=\"space-y-4\">\n                  <div className=\"flex items-center justify-center\">\n                    <Sparkles className=\"w-8 h-8 text-blue-500\" />\n                  </div>\n                  <h2 className=\"text-3xl sm:text-4xl font-bold tracking-tight text-neutral-900 dark:text-neutral-100\">\n                    {title}\n                  </h2>\n                  <p className=\"text-lg text-neutral-600 dark:text-neutral-400 max-w-2xl mx-auto\">\n                    {description}\n                  </p>\n                </motion.div>\n\n                {features && features.length > 0 && (\n                  <motion.div variants={fadeInUp} className=\"flex flex-wrap justify-center gap-4 text-sm\">\n                    {features.map((feature, index) => (\n                      <span\n                        key={`feature-${index}`}\n                        className=\"flex items-center gap-2 px-3 py-1 rounded-full bg-emerald-50 dark:bg-emerald-950/30 text-emerald-700 dark:text-emerald-300 border border-emerald-200 dark:border-emerald-800\"\n                      >\n                        <Star className=\"w-3 h-3\" />\n                        {feature}\n                      </span>\n                    ))}\n                  </motion.div>\n                )}\n\n                <motion.div variants={fadeInUp} className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                  <Button\n                    size=\"lg\"\n                    className=\"group px-8 py-3 text-base font-medium\"\n                    asChild={!!primaryAction.href}\n                    onClick={primaryAction.onClick}\n                  >\n                    {primaryAction.href ? (\n                      <a href={primaryAction.href}>\n                        {primaryAction.label}\n                        <ArrowRight className=\"ml-2 w-4 h-4 transition-transform group-hover:translate-x-1\" />\n                      </a>\n                    ) : (\n                      <>\n                        {primaryAction.label}\n                        <ArrowRight className=\"ml-2 w-4 h-4 transition-transform group-hover:translate-x-1\" />\n                      </>\n                    )}\n                  </Button>\n\n                  {secondaryAction && (\n                    <Button\n                      variant=\"outline\"\n                      size=\"lg\"\n                      className=\"px-8 py-3 text-base font-medium\"\n                      asChild={!!secondaryAction.href}\n                      onClick={secondaryAction.onClick}\n                    >\n                      {secondaryAction.href ? (\n                        <a href={secondaryAction.href}>{secondaryAction.label}</a>\n                      ) : (\n                        secondaryAction.label\n                      )}\n                    </Button>\n                  )}\n                </motion.div>\n              </div>\n            </div>\n          </motion.div>\n        ) : (\n          <motion.div\n            initial=\"hidden\"\n            whileInView=\"visible\"\n            viewport={{ once: true }}\n            variants={staggerContainer}\n            className=\"text-center space-y-8\"\n          >\n            <motion.div variants={fadeInUp} className=\"space-y-4\">\n              <h2 className={cn(\"text-3xl sm:text-4xl lg:text-5xl font-bold tracking-tight\", textClasses.title)}>\n                {title}\n              </h2>\n              <p className={cn(\"text-lg sm:text-xl max-w-3xl mx-auto leading-relaxed\", textClasses.description)}>\n                {description}\n              </p>\n            </motion.div>\n\n            {features && features.length > 0 && (\n              <motion.div variants={fadeInUp} className=\"flex flex-wrap justify-center gap-4 text-sm\">\n                {features.map((feature, index) => (\n                  <span\n                    key={`feature-${index}`}\n                    className={cn(\n                      \"flex items-center gap-2 px-3 py-1 rounded-full border\",\n                      variant === \"gradient\" || variant === \"default\"\n                        ? \"bg-white/10 text-white/90 border-white/20\"\n                        : \"bg-emerald-50 dark:bg-emerald-950/30 text-emerald-700 dark:text-emerald-300 border-emerald-200 dark:border-emerald-800\"\n                    )}\n                  >\n                    <Star className=\"w-3 h-3\" />\n                    {feature}\n                  </span>\n                ))}\n              </motion.div>\n            )}\n\n            <motion.div variants={fadeInUp} className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button\n                size=\"lg\"\n                className={cn(\n                  \"group px-8 py-3 text-base font-medium\",\n                  variant === \"gradient\" || variant === \"default\"\n                    ? \"bg-white text-neutral-900 hover:bg-neutral-100\"\n                    : \"\"\n                )}\n                asChild={!!primaryAction.href}\n                onClick={primaryAction.onClick}\n              >\n                {primaryAction.href ? (\n                  <a href={primaryAction.href}>\n                    {primaryAction.label}\n                    <ArrowRight className=\"ml-2 w-4 h-4 transition-transform group-hover:translate-x-1\" />\n                  </a>\n                ) : (\n                  <>\n                    {primaryAction.label}\n                    <ArrowRight className=\"ml-2 w-4 h-4 transition-transform group-hover:translate-x-1\" />\n                  </>\n                )}\n              </Button>\n\n              {secondaryAction && (\n                <Button\n                  variant=\"outline\"\n                  size=\"lg\"\n                  className={cn(\n                    \"px-8 py-3 text-base font-medium\",\n                    variant === \"gradient\" || variant === \"default\"\n                      ? \"border-white/30 text-white hover:bg-white/10\"\n                      : \"\"\n                  )}\n                  asChild={!!secondaryAction.href}\n                  onClick={secondaryAction.onClick}\n                >\n                  {secondaryAction.href ? (\n                    <a href={secondaryAction.href}>{secondaryAction.label}</a>\n                  ) : (\n                    secondaryAction.label\n                  )}\n                </Button>\n              )}\n            </motion.div>\n\n            {testimonial && (\n              <motion.div\n                variants={fadeInUp}\n                className=\"max-w-2xl mx-auto pt-8 border-t border-white/20 dark:border-neutral-800\"\n              >\n                <blockquote className={cn(\"text-lg italic mb-4\", textClasses.description)}>\n                  \"{testimonial.text}\"\n                </blockquote>\n                <div className=\"flex items-center justify-center gap-3\">\n                  {testimonial.avatar && (\n                    <img\n                      src={testimonial.avatar}\n                      alt={testimonial.author}\n                      className=\"w-10 h-10 rounded-full object-cover\"\n                    />\n                  )}\n                  <div className=\"text-left\">\n                    <div className={cn(\"font-semibold\", textClasses.title)}>\n                      {testimonial.author}\n                    </div>\n                    <div className={cn(\"text-sm\", textClasses.feature)}>\n                      {testimonial.role}\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </motion.div>\n        )}\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}